/*
 * 内核中需要注意的以及尚未解决的问题。 -- [OK] 代表已解决，否则未解决。
 */


【全局注意问题】

1. 设备号、硬盘逻辑块号、索引节点号从0开始，但读取硬盘时磁道块号是从1开始。

2. define 宏定义注意加括号。

3. C语言取地址之后与数相加问题。

4. 函数声明完整。

5. 程序中的命名规范化。

6. for循环体初始化处，定义变量与初始化其他变量不要同时进行，因为容易引起
变量覆盖之类的隐蔽错误。如：for(int i=0,var=1; ; ); 此处就又定义了一个var。

7. 待改进或不确定正确与否的地方要注明“[??]”。

8. 编译时，注意解决gcc给出的警告。

9. 对代码优化产生的警告信息，不是关闭优化，而是调整代码。

10. 若要修改某些变量的数据类型，记住要修改与其相关的变量数据类型，比如说
临时变量等等。



【已解决问题】

********[V0.3]
[OK] 1. 在main函数中，创建的进程，有时执行延迟函数(其实是延迟宏)会出现错误，
导致内核崩溃；而把延迟函数删去，则又没问题了。但有时执行延迟函数，则不会
出现问题。原因尚未知否，很是好奇!!!
错误原因：中断或系统调用的入口函数未保存eax的值，应保存之。

********[V0.2]
[OK] 1. 全局变量在函数外部初始化(即定义时初始化)，会失败!!! 原因尚不清楚，
在函数中初始化或定义就不会出现问题。
错误原因：ELF文件中data数据段页对齐所致，参考 tools/build.c



【待解决问题】

********[V0.3.1]
[] 1. 进程的 struct exec_info * 类型指针 exec 的继承问题，若子进程多次调用
execve()，那么exec指针指向的页面是否泄漏。这是一个问题。

[] 2. 文件类型与文件权限是否处理完整(例如：可执行等状态的设置、以只读方式
打开就不能写)。

[] 3. 文件路径分量最大长度与字符串结束符问题。

[] 4. 系统调用参数与返回值、错误码标准化，同时返回值和入口处要检查。

[] 5. 函数参数有必要减少的减少之。


********[V0.2]
[] 1. console.c优化会出错!!! 即使是 -O. 此问题在0.2版时尚未完全解决。但将
clean_line()中的内嵌汇编的输出部分，添加 "=D"(start) 可以解决其中一个问题。

[] 2. 还是优化问题，当优化选项为 -O1 或 -O2 或 -O3 等时，会导致系统无法正
常启动。此问题在0.2版时尚未完全解决。只知道原因是开启上述优化选项之后，在
ld时，会将main()连接在head模块之前，导致无法正常启动。但解决办法还没有。



