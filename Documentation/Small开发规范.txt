Small开发规范
2014-3-2 11:56:49


为了代码的规范化和内核的可靠性，进而明确开发规范，如下：


一、编码规范

1、源码文件头部须加入声明，要求如下：
对于*.c和*.h文件，在头部加入：
	/*
	 * Small/[path]/[file]
	 *
	 * (C) [year] [author] <[email]>
	 */
对于Makefile文件，在头部加入：
	#
	# Small/[path]/Makefile
	#
	# (C) [year] [author] <[email]>
	#
对于*.s(gas格式)文件，在头部加入：
	#
	# Small/[path]/[file]
	#
	# (C) [year] [author] <[email]>
	#
对于*.s(as86格式)文件，在头部加入：
	!
	! Small/[path]/[file]
	!
	! (C) [year] [author] <[email]>
	!

2、源码需注释详尽，要求如下：
对于源码文件需要注意的问题，也应在文件头部进行注释说明；
对于C函数和汇编函数应该在函数头部加入必要的功能说明或注意事项；
对于重要或易出错的代码语句要注释说明。

3、保证程序健壮，要求如下：
对于各个模块、函数，应尽量保证其正确性、健壮性；
对于输入参数应进行正确性判断并作出相应处理。以避免大量错误以及漏洞。


二、说明文档
1、对于模块的设计以及实现，须编写相应的说明文档。
2、文档应详细说明：设计结构、实现原理、功能说明、接口说明、需注意的问题。


三、接口说明
1、对于函数的接口说明，需在函数头部注释中写明，参见：编码规范。
2、对于模块间的接口，需在源代码文件以及说明文档中详细说明。


四、版本控制
1、成员应定期商量是否进行版本升级，如在实现一个模块或者其他较完整的功能
之后，可以考虑是否升级版本，即进入下一版开发。
2、在进行版本升级之前，需对当前版本进行总结。给出该版本实现的功能、需注
意的问题、待解决问题等等。这需要各成员之间讨论得出。
3、在源码以及相应的文档中，应该注明版本。
4、版本的格式暂定为：0.0、0.1、0.1.1、0.1.5、1.5等等。


五、模块设计
1、模块设计应：规范化、可扩展。
